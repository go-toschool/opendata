// Code generated by protoc-gen-go. DO NOT EDIT.
// source: shura.proto

package shura // import "github.com/go-toschool/opendata/capricornius/shura"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Partner struct {
	PartnerToken         string   `protobuf:"bytes,1,opt,name=partner_token,json=partnerToken,proto3" json:"partner_token,omitempty"`
	UserToken            string   `protobuf:"bytes,2,opt,name=user_token,json=userToken,proto3" json:"user_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Partner) Reset()         { *m = Partner{} }
func (m *Partner) String() string { return proto.CompactTextString(m) }
func (*Partner) ProtoMessage()    {}
func (*Partner) Descriptor() ([]byte, []int) {
	return fileDescriptor_shura_277be4bff82647f8, []int{0}
}
func (m *Partner) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Partner.Unmarshal(m, b)
}
func (m *Partner) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Partner.Marshal(b, m, deterministic)
}
func (dst *Partner) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Partner.Merge(dst, src)
}
func (m *Partner) XXX_Size() int {
	return xxx_messageInfo_Partner.Size(m)
}
func (m *Partner) XXX_DiscardUnknown() {
	xxx_messageInfo_Partner.DiscardUnknown(m)
}

var xxx_messageInfo_Partner proto.InternalMessageInfo

func (m *Partner) GetPartnerToken() string {
	if m != nil {
		return m.PartnerToken
	}
	return ""
}

func (m *Partner) GetUserToken() string {
	if m != nil {
		return m.UserToken
	}
	return ""
}

type Token struct {
	PartnerToken         string   `protobuf:"bytes,1,opt,name=partner_token,json=partnerToken,proto3" json:"partner_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_shura_277be4bff82647f8, []int{1}
}
func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (dst *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(dst, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetPartnerToken() string {
	if m != nil {
		return m.PartnerToken
	}
	return ""
}

type Response struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_shura_277be4bff82647f8, []int{2}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TokenResponse struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Valid                bool     `protobuf:"varint,3,opt,name=valid,proto3" json:"valid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokenResponse) Reset()         { *m = TokenResponse{} }
func (m *TokenResponse) String() string { return proto.CompactTextString(m) }
func (*TokenResponse) ProtoMessage()    {}
func (*TokenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_shura_277be4bff82647f8, []int{3}
}
func (m *TokenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenResponse.Unmarshal(m, b)
}
func (m *TokenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenResponse.Marshal(b, m, deterministic)
}
func (dst *TokenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenResponse.Merge(dst, src)
}
func (m *TokenResponse) XXX_Size() int {
	return xxx_messageInfo_TokenResponse.Size(m)
}
func (m *TokenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokenResponse proto.InternalMessageInfo

func (m *TokenResponse) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *TokenResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *TokenResponse) GetValid() bool {
	if m != nil {
		return m.Valid
	}
	return false
}

type Origin struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Origin) Reset()         { *m = Origin{} }
func (m *Origin) String() string { return proto.CompactTextString(m) }
func (*Origin) ProtoMessage()    {}
func (*Origin) Descriptor() ([]byte, []int) {
	return fileDescriptor_shura_277be4bff82647f8, []int{4}
}
func (m *Origin) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Origin.Unmarshal(m, b)
}
func (m *Origin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Origin.Marshal(b, m, deterministic)
}
func (dst *Origin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Origin.Merge(dst, src)
}
func (m *Origin) XXX_Size() int {
	return xxx_messageInfo_Origin.Size(m)
}
func (m *Origin) XXX_DiscardUnknown() {
	xxx_messageInfo_Origin.DiscardUnknown(m)
}

var xxx_messageInfo_Origin proto.InternalMessageInfo

type Origins struct {
	AllowedOrigins       []string `protobuf:"bytes,1,rep,name=allowed_origins,json=allowedOrigins,proto3" json:"allowed_origins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Origins) Reset()         { *m = Origins{} }
func (m *Origins) String() string { return proto.CompactTextString(m) }
func (*Origins) ProtoMessage()    {}
func (*Origins) Descriptor() ([]byte, []int) {
	return fileDescriptor_shura_277be4bff82647f8, []int{5}
}
func (m *Origins) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Origins.Unmarshal(m, b)
}
func (m *Origins) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Origins.Marshal(b, m, deterministic)
}
func (dst *Origins) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Origins.Merge(dst, src)
}
func (m *Origins) XXX_Size() int {
	return xxx_messageInfo_Origins.Size(m)
}
func (m *Origins) XXX_DiscardUnknown() {
	xxx_messageInfo_Origins.DiscardUnknown(m)
}

var xxx_messageInfo_Origins proto.InternalMessageInfo

func (m *Origins) GetAllowedOrigins() []string {
	if m != nil {
		return m.AllowedOrigins
	}
	return nil
}

func init() {
	proto.RegisterType((*Partner)(nil), "shura.Partner")
	proto.RegisterType((*Token)(nil), "shura.Token")
	proto.RegisterType((*Response)(nil), "shura.Response")
	proto.RegisterType((*TokenResponse)(nil), "shura.TokenResponse")
	proto.RegisterType((*Origin)(nil), "shura.Origin")
	proto.RegisterType((*Origins)(nil), "shura.Origins")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceClient is the client API for Service service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceClient interface {
	Create(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*Response, error)
	Delete(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*Response, error)
	Update(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*Response, error)
	GetToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*TokenResponse, error)
	GetOrigins(ctx context.Context, in *Origin, opts ...grpc.CallOption) (*Origins, error)
}

type serviceClient struct {
	cc *grpc.ClientConn
}

func NewServiceClient(cc *grpc.ClientConn) ServiceClient {
	return &serviceClient{cc}
}

func (c *serviceClient) Create(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/shura.Service/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Delete(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/shura.Service/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) Update(ctx context.Context, in *Partner, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/shura.Service/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetToken(ctx context.Context, in *Token, opts ...grpc.CallOption) (*TokenResponse, error) {
	out := new(TokenResponse)
	err := c.cc.Invoke(ctx, "/shura.Service/GetToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceClient) GetOrigins(ctx context.Context, in *Origin, opts ...grpc.CallOption) (*Origins, error) {
	out := new(Origins)
	err := c.cc.Invoke(ctx, "/shura.Service/GetOrigins", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceServer is the server API for Service service.
type ServiceServer interface {
	Create(context.Context, *Partner) (*Response, error)
	Delete(context.Context, *Partner) (*Response, error)
	Update(context.Context, *Partner) (*Response, error)
	GetToken(context.Context, *Token) (*TokenResponse, error)
	GetOrigins(context.Context, *Origin) (*Origins, error)
}

func RegisterServiceServer(s *grpc.Server, srv ServiceServer) {
	s.RegisterService(&_Service_serviceDesc, srv)
}

func _Service_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Partner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shura.Service/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Create(ctx, req.(*Partner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Partner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shura.Service/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Delete(ctx, req.(*Partner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Partner)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shura.Service/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).Update(ctx, req.(*Partner))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shura.Service/GetToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetToken(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _Service_GetOrigins_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Origin)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceServer).GetOrigins(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/shura.Service/GetOrigins",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceServer).GetOrigins(ctx, req.(*Origin))
	}
	return interceptor(ctx, in, info, handler)
}

var _Service_serviceDesc = grpc.ServiceDesc{
	ServiceName: "shura.Service",
	HandlerType: (*ServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Service_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Service_Delete_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _Service_Update_Handler,
		},
		{
			MethodName: "GetToken",
			Handler:    _Service_GetToken_Handler,
		},
		{
			MethodName: "GetOrigins",
			Handler:    _Service_GetOrigins_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shura.proto",
}

func init() { proto.RegisterFile("shura.proto", fileDescriptor_shura_277be4bff82647f8) }

var fileDescriptor_shura_277be4bff82647f8 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x92, 0xcb, 0x4e, 0xe3, 0x30,
	0x14, 0x86, 0x95, 0xa9, 0x72, 0xe9, 0xe9, 0x4d, 0xb2, 0xba, 0x88, 0x2a, 0x8d, 0xa6, 0xca, 0x2c,
	0x68, 0x05, 0x4a, 0x44, 0x79, 0x03, 0x0a, 0x74, 0x85, 0x40, 0x01, 0x36, 0x6c, 0x8a, 0x9b, 0x1c,
	0xb5, 0x16, 0xa9, 0x1d, 0xd9, 0x4e, 0x79, 0x64, 0x5e, 0x03, 0xd5, 0x76, 0x2b, 0xd8, 0x75, 0xc1,
	0xce, 0xdf, 0xef, 0x2f, 0x7f, 0x74, 0x72, 0x02, 0x1d, 0xb5, 0x69, 0x24, 0x4d, 0x6b, 0x29, 0xb4,
	0x20, 0xbe, 0x81, 0xe4, 0x1e, 0xc2, 0x47, 0x2a, 0x35, 0x47, 0x49, 0xfe, 0x43, 0xaf, 0xb6, 0xc7,
	0xa5, 0x16, 0xef, 0xc8, 0x63, 0x6f, 0xec, 0x4d, 0xda, 0x79, 0xd7, 0x85, 0xcf, 0xfb, 0x8c, 0xfc,
	0x05, 0x68, 0xd4, 0xd1, 0xf8, 0x63, 0x8c, 0xf6, 0x3e, 0x31, 0xd7, 0xc9, 0x05, 0xf8, 0xd6, 0x3b,
	0xa5, 0x2c, 0xb9, 0x85, 0x28, 0x47, 0x55, 0x0b, 0xae, 0x90, 0xfc, 0x83, 0x8e, 0xd2, 0x54, 0x37,
	0x6a, 0x59, 0x88, 0x12, 0x8d, 0xee, 0xe7, 0x60, 0xa3, 0xb9, 0x28, 0x91, 0xc4, 0x10, 0x6e, 0x51,
	0x29, 0xba, 0x46, 0xf7, 0xda, 0x03, 0x26, 0x6f, 0xd0, 0x33, 0x7d, 0xbf, 0xd0, 0x45, 0x86, 0xe0,
	0xef, 0x68, 0xc5, 0xca, 0xb8, 0x35, 0xf6, 0x26, 0x51, 0x6e, 0x21, 0x89, 0x20, 0x78, 0x90, 0x6c,
	0xcd, 0x78, 0x32, 0x83, 0xd0, 0x9e, 0x14, 0x39, 0x83, 0x01, 0xad, 0x2a, 0xf1, 0x81, 0xe5, 0x52,
	0xd8, 0x28, 0xf6, 0xc6, 0xad, 0x49, 0x3b, 0xef, 0xbb, 0xd8, 0x89, 0xb3, 0x4f, 0x0f, 0xc2, 0x27,
	0x94, 0x3b, 0x56, 0x20, 0x99, 0x42, 0x30, 0x97, 0x48, 0x35, 0x92, 0x7e, 0x6a, 0xd7, 0xe1, 0x3e,
	0xff, 0x68, 0xe0, 0xf8, 0x38, 0xc5, 0x14, 0x82, 0x1b, 0xac, 0xf0, 0x44, 0xf5, 0xa5, 0x2e, 0x4f,
	0x6a, 0x4d, 0x21, 0x5a, 0xa0, 0xb6, 0x4b, 0xea, 0xba, 0x4b, 0x43, 0xa3, 0xe1, 0x77, 0x3a, 0xfa,
	0xe7, 0x00, 0x0b, 0xd4, 0x87, 0x99, 0x7b, 0xce, 0xb1, 0x3c, 0xea, 0xff, 0x40, 0x75, 0x7d, 0xf9,
	0x9a, 0xad, 0x99, 0xde, 0x34, 0xab, 0xb4, 0x10, 0xdb, 0xec, 0x8e, 0xf1, 0x82, 0xa1, 0x14, 0x99,
	0xa8, 0x91, 0x97, 0x54, 0xd3, 0xac, 0xa0, 0xb5, 0x64, 0x85, 0x90, 0x9c, 0x35, 0x2a, 0x33, 0x8f,
	0xae, 0x02, 0xf3, 0x3b, 0x5e, 0x7d, 0x05, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xf1, 0xbc, 0x4f, 0x9d,
	0x02, 0x00, 0x00,
}
